{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chatbot-item.component.ts","webpack:///src/app/chatbot-item.component.html","webpack:///src/app/chatbot.component.html","webpack:///src/app/chatbot.component.ts","webpack:///src/app/home.component.ts","webpack:///src/app/home.component.html","webpack:///src/app/shared/classes/message.ts","webpack:///src/app/shared/directives/auto-scroll.directive.ts","webpack:///src/app/shared/services/dialog-flow.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","ChatbotItemComponent","dialogflow","isHuman","message","sender","button","userMessage","reply","openUrl","window","open","ChatbotComponent","storage","messages","getMessages","typing","getIsWaiting","sendMessageQuery","input","click","files","length","file","item","uploadFile","alert","getSessionID","ref","task","upload","snapshotChanges","toPromise","getDownloadURL","console","log","changeUpload","openUpload","sendMessageMenu","sendMessage","HomeComponent","firestore","masterDoc","doc","master$","valueChanges","aboutDoc","about$","serviceDoc","service$","packageDoc","package$","contactDoc","contact$","document","querySelector","scrollIntoView","behavior","scrollTo","Message","created","Date","MessageButton","AutoScrollDirective","el","element","nativeElement","changes","MutationObserver","scrollToBottom","observe","childList","disconnect","top","calculateScrollToBottom","Math","max","scrollHeight","offsetHeight","DialogFlowService","dialogFlowToken","dialogFlow","isWaiting","sessionID","localStorage","getItem","setItem","client","accessToken","sessionId","text","next","handleQueryResponse","textRequest","asObservable","pipe","acc","value","concat","promise","response","handleAction","result","fulfillment","forEach","speech","handleFirebaseError","resolvedQuery","startsWith","jsonString","substr","indexOf","JSON","parse","botMessage","playSound","reason","query","audio","Audio","load","play","actionName","action","actionCheckEnquire","enquireCol","collection","where","get","subscribe","snapshot","docs","data","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {HomeComponent} from './home.component';\nimport {ChatbotComponent} from './chatbot.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'chatbot', component: ChatbotComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'website-v2';\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AngularFireModule} from '@angular/fire';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\n\nimport {environment} from '../environments/environment';\n\nimport {AppComponent} from './app.component';\nimport {HomeComponent} from './home.component';\nimport {ChatbotComponent} from './chatbot.component';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\nimport { ChatbotItemComponent } from './chatbot-item.component';\nimport {DialogFlowService} from './shared/services/dialog-flow.service';\nimport {FormsModule} from '@angular/forms';\nimport { AutoScrollDirective } from './shared/directives/auto-scroll.directive';\nimport {AngularFireStorageModule} from '@angular/fire/storage';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ChatbotComponent,\n    ChatbotItemComponent,\n    AutoScrollDirective,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireStorageModule,\n    AngularFirestoreModule,\n    FormsModule\n  ],\n  providers: [DialogFlowService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Message, MessageButton} from './shared/classes/message';\nimport {DialogFlowService} from './shared/services/dialog-flow.service';\n\n@Component({\n  selector: 'app-chatbot-item',\n  templateUrl: './chatbot-item.component.html',\n  styleUrls: ['./chatbot-item.component.css']\n})\nexport class ChatbotItemComponent implements OnInit {\n\n  @Input() message: Message;\n\n  public isHuman: boolean;\n\n  constructor(private dialogflow: DialogFlowService) {\n\n  }\n\n  ngOnInit(): void {\n    this.isHuman = (this.message.sender === 'human');\n  }\n\n  onClickReply(button: MessageButton) {\n    this.dialogflow.userMessage(button.reply);\n\n    if (button.openUrl) {\n      window.open(button.openUrl, '_blank');\n    }\n  }\n\n}\n","<div class=\"clearfix mb-3\">\n  <div class=\"bg-white shadow-sm p-2 rounded d-inline-block mb-2\"\n       [ngClass]=\"{'float-right': isHuman, 'ml-4':isHuman, 'mr-4':!isHuman}\">\n    <small class=\"text-muted\">\n      {{message.sender === 'human' ? 'You' : 'Reno Bot'}}, say at {{message.created | date:'short'}}\n    </small>\n    <p class=\"mb-0\" style=\"font-size: 1.2em\">{{message.text}}</p>\n  </div>\n  <div class=\"p-2\">\n    <div class=\"row rounded p-1 bg-white\" *ngIf=\"message.buttons\">\n      <div class=\"col-md-6 py-1 pb-1\" *ngFor=\"let button of message.buttons\">\n        <a target=\"_blank\" href=\"{{button.image}}\"><img src=\"{{button.image}}\" *ngIf=\"button.image\" alt=\"\" class=\"img-fluid\"/></a>\n        <button class=\"btn btn-danger btn-sm mt-1 btn-block\" *ngIf=\"button.reply\" (click)=\"onClickReply(button)\">{{button.label}}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"chatbot-floater rounded p-2 shadow\">\n  <a href=\"/\">\n    <i class=\"fas fa-2x fa-robot text-primary\"></i>\n    <sup class=\"ml-2\">Home</sup>\n  </a>\n</div>\n<div class=\"h-100 bg-light background-cover\">\n  <div class=\"container h-100\">\n    <div class=\"row h-100 justify-content-center align-items-center\">\n      <div class=\"h-100 py-2 py-md-5 col-md-8\">\n        <div class=\"h-100 rounded shadow-lg chatbot\">\n          <div class=\"d-flex flex-column h-100\">\n            <div class=\"p-2 rounded-top chatbot-header font-family-baloo\">\n              <i class=\"fas fa-2x fa-robot text-primary mr-2\"></i>\n              <span class=\"bot-name mr-2\">Reno Bot</span>\n              <small class=\"text-muted\" *ngIf=\"typing | async\">is typing...</small>\n            </div>\n            <div class=\"flex-fill p-3 font-family-saira overflow-auto\" appAutoScroll>\n              <app-chatbot-item [message]=\"message\" *ngFor=\"let message of messages | async\">\n              </app-chatbot-item>\n            </div>\n            <div class=\"p-2 bg-white rounded-bottom font-family-baloo\">\n              <div class=\"d-flex\">\n                <input type=\"file\" hidden (change)=\"changeUpload(fileUpload.files)\" #fileUpload>\n                <button class=\"btn btn-outline-info ml-0 mr-2\" [disabled]=\"typing | async\" (click)=\"openUpload(fileUpload)\">Upload</button>\n                <button class=\"btn btn-outline-info ml-0 mr-2\" [disabled]=\"typing | async\" (click)=\"sendMessageMenu()\">\n                  Menu\n                </button>\n                <label for=\"id_input\"></label>\n                <input #message_input id=\"id_input\" type=\"text\" placeholder=\"your message\" class=\"form-control\" [(ngModel)]=\"message\"\n                       [disabled]=\"typing | async\"\n                       (change)=\"sendMessage()\">\n                <button class=\"btn btn-primary\" [disabled]=\"typing | async\" (click)=\"sendMessage()\">send\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Message} from './shared/classes/message';\nimport {DialogFlowService} from './shared/services/dialog-flow.service';\nimport {AngularFireStorage} from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.css']\n})\nexport class ChatbotComponent implements OnInit {\n\n  public message: string;\n  public messages: Observable<Message[]>;\n  public typing: Observable<boolean>;\n\n  constructor(private dialogflow: DialogFlowService, private storage: AngularFireStorage) {\n    this.message = '';\n    this.messages = dialogflow.getMessages();\n    this.typing = dialogflow.getIsWaiting();\n  }\n\n  ngOnInit(): void {\n    this.dialogflow.sendMessageQuery('menu');\n  }\n\n  public sendMessage() {\n    this.dialogflow.userMessage(this.message);\n    this.message = '';\n  }\n\n  public openUpload(input: HTMLInputElement) {\n    input.click();\n  }\n\n  public changeUpload(files: FileList) {\n    if (files.length === 1) {\n      const file: File = files.item(0);\n      this.uploadFile(file);\n\n    } else {\n      window.alert('Multiple file uploaded is not allow!');\n    }\n  }\n\n  public sendMessageMenu() {\n    this.dialogflow.userMessage('menu');\n  }\n\n  private uploadFile(file: File) {\n    const path = 'enquire_image/' + this.dialogflow.getSessionID();\n\n    const ref = this.storage.ref(path);\n\n    const task = this.storage.upload(path, file);\n    task.snapshotChanges().toPromise().finally(async () => {\n      this.message = await ref.getDownloadURL().toPromise();\n      console.log(this.message);\n    });\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AngularFirestore, AngularFirestoreDocument} from '@angular/fire/firestore';\n\nimport {Observable} from 'rxjs';\n\nimport {Master} from './shared/interfaces/master';\nimport {About} from './shared/interfaces/about';\nimport {Service} from './shared/interfaces/service';\nimport {Package} from './shared/interfaces/package';\nimport {Contact} from './shared/interfaces/contact';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  private masterDoc: AngularFirestoreDocument<Master>;\n  private aboutDoc: AngularFirestoreDocument<About>;\n  private serviceDoc: AngularFirestoreDocument<Service>;\n  private packageDoc: AngularFirestoreDocument<Package>;\n  private contactDoc: AngularFirestoreDocument<Contact>;\n\n  public master$: Observable<Master>;\n  public about$: Observable<About>;\n  public service$: Observable<Service>;\n  public package$: Observable<Package>;\n  public contact$: Observable<Contact>;\n\n  constructor(private firestore: AngularFirestore) {\n    this.masterDoc = firestore.doc('setup/master');\n    this.master$ = this.masterDoc.valueChanges();\n\n    this.aboutDoc = firestore.doc('setup/about');\n    this.about$ = this.aboutDoc.valueChanges();\n\n    this.serviceDoc = firestore.doc('setup/service');\n    this.service$ = this.serviceDoc.valueChanges();\n\n    this.packageDoc = firestore.doc('setup/package');\n    this.package$ = this.packageDoc.valueChanges();\n\n    this.contactDoc = firestore.doc('setup/contact');\n    this.contact$ = this.contactDoc.valueChanges();\n  }\n\n  ngOnInit(): void {\n  }\n\n  public scrollTo(id: string): void {\n    document.querySelector(id).scrollIntoView({behavior: 'smooth'});\n  }\n}\n","<div>\r\n  <nav class=\"navbar navbar-expand-lg navbar-light fixed-top py-3 shadow-sm\" id=\"mainNav\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" href=\"/\">Maya A Home</a>\r\n      <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\r\n              data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n        <ul class=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n          <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"scrollTo('#master')\">Home</a></li>\r\n          <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"scrollTo('#about')\">About</a></li>\r\n          <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"scrollTo('#service')\">Services</a></li>\r\n          <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"scrollTo('#portfolio')\">Portfolio</a></li>\r\n          <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"scrollTo('#package')\">Packages</a></li>\r\n          <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"scrollTo('#contact')\">Contact</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <header id=\"master\" class=\"masthead scroll-trigger\" *ngIf=\"master$ | async as master\">\r\n    <div class=\"container h-100\">\r\n      <div class=\"row h-100 align-items-center justify-content-center text-center\">\r\n        <div class=\"col-lg-10 align-self-end\">\r\n          <h1 class=\"text-uppercase text-white font-weight-bold\">{{master.title}}</h1>\r\n          <hr class=\"divider my-4\"/>\r\n        </div>\r\n        <div class=\"col-lg-8 align-self-baseline\">\r\n          <p class=\"text-white-75 font-weight-light mb-5\">{{master.subtitle}}</p>\r\n          <a class=\"btn btn-primary btn-xl js-scroll-trigger text-white\"\r\n             (click)=\"scrollTo('#package')\">{{master.button_text}}</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n\r\n  <section id=\"about\" class=\"page-section bg-primary scroll-trigger\" *ngIf=\"about$ | async as about\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-8 text-center\">\r\n          <h2 class=\"text-white mt-0\">{{about.title}}</h2>\r\n          <hr class=\"divider light my-4\"/>\r\n          <p class=\"text-white-50 mb-4\">{{about.subtitle}}</p>\r\n          <a class=\"btn btn-light btn-xl js-scroll-trigger\" routerLink=\"/chatbot\">{{about.button_text}}</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section id=\"service\" class=\"page-section scroll-trigger\" *ngIf=\"service$ | async as service \">\r\n    <div class=\"container\">\r\n      <h2 class=\"text-center mt-0\">{{service.title}}</h2>\r\n      <hr class=\"divider my-4\"/>\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-3 col-md-6 text-center\" *ngFor=\"let content of service.contents\">\r\n          <div class=\"mt-5\">\r\n            <i class=\"fas fa-4x {{content.icon}} text-primary mb-4\"></i>\r\n            <h3 class=\"h4 mb-2\">{{content.title}}</h3>\r\n            <p class=\"text-muted mb-0\">{{content.subtitle}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section id=\"portfolio\" class=\"scroll-trigger\">\r\n    <div class=\"container-fluid p-0\">\r\n      <div class=\"row no-gutters\">\r\n        <div class=\"col-lg-4 col-sm-6\">\r\n          <a class=\"portfolio-box\" href=\"assets/img/portfolio/fullsize/1.jpg\"\r\n          ><img class=\"img-fluid\" src=\"assets/img/portfolio/thumbnails/1.jpg\" alt=\"\"/>\r\n            <div class=\"portfolio-box-caption\">\r\n              <div class=\"project-category text-white-50\">Category</div>\r\n              <div class=\"project-name\">Project Name</div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div class=\"col-lg-4 col-sm-6\">\r\n          <a class=\"portfolio-box\" href=\"assets/img/portfolio/fullsize/2.jpg\"\r\n          ><img class=\"img-fluid\" src=\"assets/img/portfolio/thumbnails/2.jpg\" alt=\"\"/>\r\n            <div class=\"portfolio-box-caption\">\r\n              <div class=\"project-category text-white-50\">Category</div>\r\n              <div class=\"project-name\">Project Name</div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div class=\"col-lg-4 col-sm-6\">\r\n          <a class=\"portfolio-box\" href=\"assets/img/portfolio/fullsize/3.jpeg\"\r\n          ><img class=\"img-fluid\" src=\"assets/img/portfolio/thumbnails/3.jpeg\" alt=\"\"/>\r\n            <div class=\"portfolio-box-caption\">\r\n              <div class=\"project-category text-white-50\">Category</div>\r\n              <div class=\"project-name\">Project Name</div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div class=\"col-lg-4 col-sm-6\">\r\n          <a class=\"portfolio-box\" href=\"assets/img/portfolio/fullsize/4.jpg\"\r\n          ><img class=\"img-fluid\" src=\"assets/img/portfolio/thumbnails/4.jpg\" alt=\"\"/>\r\n            <div class=\"portfolio-box-caption\">\r\n              <div class=\"project-category text-white-50\">Category</div>\r\n              <div class=\"project-name\">Project Name</div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div class=\"col-lg-4 col-sm-6\">\r\n          <a class=\"portfolio-box\" href=\"assets/img/portfolio/fullsize/5.jpg\"\r\n          ><img class=\"img-fluid\" src=\"assets/img/portfolio/thumbnails/5.jpg\" alt=\"\"/>\r\n            <div class=\"portfolio-box-caption\">\r\n              <div class=\"project-category text-white-50\">Category</div>\r\n              <div class=\"project-name\">Project Name</div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div class=\"col-lg-4 col-sm-6\">\r\n          <a class=\"portfolio-box\" href=\"assets/img/portfolio/fullsize/6.jpg\"\r\n          ><img class=\"img-fluid\" src=\"assets/img/portfolio/thumbnails/6.jpg\" alt=\"\"/>\r\n            <div class=\"portfolio-box-caption p-3\">\r\n              <div class=\"project-category text-white-50\">Category</div>\r\n              <div class=\"project-name\">Project Name</div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section id=\"package\" class=\"page-section bg-dark text-white scroll-trigger\" *ngIf=\"package$ | async as pkg\">\r\n    <div class=\"container text-center\">\r\n      <h2 class=\"mb-4\">{{pkg.title}}</h2>\r\n      <div class=\"row mb-4\" *ngIf=\"pkg.contents\">\r\n        <div class=\"col-md-4\" *ngFor=\"let content of pkg.contents\">\r\n          <a href=\"{{content.image}}\" target=\"_blank\">\r\n            <img class=\"img-fluid rounded mb-4\" src=\"{{content.image}}\" alt=\"{{content.name}}\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <a class=\"btn btn-light btn-xl\" routerLink=\"/chatbot\">{{pkg.button_text}}</a>\r\n    </div>\r\n  </section>\r\n\r\n  <section id=\"contact\" class=\"page-section scroll-trigger\" *ngIf=\"contact$ | async as contact\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-8 text-center\">\r\n          <h2 class=\"mt-0\">{{contact.title}}</h2>\r\n          <hr class=\"divider my-4\"/>\r\n          <p class=\"text-muted mb-5\">{{contact.subtitle}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-2 mr-auto text-center mb-5\" *ngFor=\"let content of contact.contents\">\r\n          <i class=\"fas {{content.icon}} fa-3x mb-3 text-muted\"></i>\r\n          <a class=\"d-block\" target=\"_blank\" href=\"{{content.url}}\">{{content.label}}</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <div class=\"chatbot-floater rounded p-2 shadow\">\r\n    <a href=\"/chatbot\">\r\n      <i class=\"fas fa-2x fa-robot text-primary\"></i>\r\n      <sup class=\"ml-2\">Chat Now</sup>\r\n    </a>\r\n  </div>\r\n\r\n  <footer class=\"bg-light py-5\">\r\n    <div class=\"container\">\r\n      <div class=\"small text-center text-muted\">Copyright © 2020 - Start Bootstrap</div>\r\n    </div>\r\n  </footer>\r\n</div>\r\n","export class Message {\n  public text: string;\n  public sender = 'bot';\n  public created = new Date();\n  public buttons: MessageButton[];\n}\n\nexport class MessageButton {\n  public title: string;\n  public description: string;\n  public label: string;\n  public reply: string;\n  public image: string;\n  public openUrl: string;\n}\n","import {Directive, ElementRef, OnDestroy} from '@angular/core';\n\n@Directive({\n  selector: '[appAutoScroll]'\n})\nexport class AutoScrollDirective implements OnDestroy {\n\n  private readonly changes: MutationObserver;\n  private readonly element: HTMLElement;\n\n  constructor(private el: ElementRef) {\n    this.element = this.el.nativeElement;\n\n    this.changes = new MutationObserver(() => {\n      this.scrollToBottom();\n    });\n\n    this.changes.observe(this.element, {childList: true});\n  }\n\n  ngOnDestroy(): void {\n    this.changes.disconnect();\n  }\n\n  private scrollToBottom(): void {\n    this.element.scrollTo({behavior: 'smooth', top: this.calculateScrollToBottom()});\n  }\n\n  private calculateScrollToBottom(): number {\n    return Math.max(0, this.element.scrollHeight - this.element.offsetHeight);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {scan} from 'rxjs/operators';\n\nimport {ApiAiClient, IServerResponse} from 'api-ai-javascript/es6/ApiAiClient';\nimport {v4 as uuidv4} from 'uuid';\n\nimport {Message} from '../classes/message';\nimport {environment} from '../../../environments/environment';\nimport {AngularFirestore, AngularFirestoreCollection} from '@angular/fire/firestore';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogFlowService {\n\n  private enquireCol: AngularFirestoreCollection;\n\n  private readonly dialogFlowToken = environment.dialogFlow;\n  private readonly client;\n\n  private readonly messages: BehaviorSubject<Message[]>;\n  private readonly isWaiting: BehaviorSubject<boolean>;\n\n  private readonly sessionID: string;\n\n  constructor(private firestore: AngularFirestore) {\n    this.messages = new BehaviorSubject<Message[]>([]);\n    this.isWaiting = new BehaviorSubject<boolean>(false);\n\n    // check previous session id save in localStorage\n    this.sessionID = localStorage.getItem('dialog_flow_session_id');\n\n    // dialog flow require session id to keep session alive\n    if (!this.sessionID) {\n\n      this.sessionID = uuidv4();\n      console.log(`create new session id: ${this.sessionID}`);\n\n      // save created uuid to locaStorage\n      localStorage.setItem('dialog_flow_session_id', this.sessionID);\n\n    } else {\n      console.log(`start session with id: ${this.sessionID}`);\n    }\n\n    this.client = new ApiAiClient({accessToken: this.dialogFlowToken, sessionId: this.sessionID});\n  }\n\n\n  public getSessionID(): string {\n    return this.sessionID;\n  }\n\n  public sendMessageQuery(text: string) {\n    // simulate bot typing\n    this.isWaiting.next(true);\n\n    this.handleQueryResponse(this.client.textRequest(text));\n  }\n\n  public userMessage(text: string) {\n    const message: Message = new Message();\n    message.text = text;\n    message.sender = 'human';\n\n    this.messages.next([message]);\n\n    this.sendMessageQuery(text);\n  }\n\n  public botMessage(text: string) {\n    const message: Message = new Message();\n    message.text = text;\n\n    this.messages.next([message]);\n  }\n\n  public getMessages(): Observable<Message[]> {\n    return this.messages\n      .asObservable()\n      .pipe(scan((acc, value) => acc.concat(value)));\n  }\n\n  public getIsWaiting(): Observable<boolean> {\n    return this.isWaiting.asObservable();\n  }\n\n  private handleQueryResponse(promise: Promise<IServerResponse>) {\n    promise\n      .then(response => {\n        this.handleAction(response);\n\n        const messages: any[] = response.result.fulfillment.messages;\n\n        messages.forEach(value => {\n          const speech: string = value.speech;\n\n          if (!speech) {\n            this.handleFirebaseError(response.result.resolvedQuery);\n          } else {\n            if (speech.startsWith('payload:')) {\n              const jsonString: string = speech.substr(speech.indexOf(':') + 1);\n              const message: Message = JSON.parse(jsonString);\n              message.created = new Date();\n              this.messages.next([message]);\n\n            } else {\n              this.botMessage(speech);\n            }\n\n            this.isWaiting.next(false);\n            this.playSound();\n          }\n        });\n      })\n      .catch(reason => {\n        console.log(reason);\n        this.isWaiting.next(false);\n      });\n  }\n\n  private handleFirebaseError(query: string) {\n    this.sendMessageQuery(query);\n  }\n\n  private playSound() {\n    const audio = new Audio('../../../assets/sound/notification.mp3');\n    audio.load();\n    audio.play().finally(() => console.log('play sound'));\n  }\n\n  private handleAction(response: any) {\n    const actionName: string = response.result.action;\n\n    switch (actionName) {\n      case 'action_check_enquire':\n        this.actionCheckEnquire();\n        break;\n      case 'action_link_account':\n        break;\n    }\n  }\n\n  private actionCheckEnquire() {\n    this.enquireCol = this.firestore.collection(`enquires`, ref => ref.where('sessionID', '==', this.sessionID));\n    this.enquireCol.get().subscribe(snapshot => snapshot.docs.forEach(value => console.log(value.data())));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyD8d0gRBtRgrBlwyqTKoKN1atLmEtEtzzE',\n    authDomain: 'renovation-v2.firebaseapp.com',\n    databaseURL: 'https://renovation-v2.firebaseio.com',\n    projectId: 'renovation-v2',\n    storageBucket: 'renovation-v2.appspot.com',\n    messagingSenderId: '239397622010',\n    appId: '1:239397622010:web:daf39c0a7fba44dd7b7943',\n    measurementId: 'G-MNNYQPS1GF'\n  },\n  dialogFlow: '967dfcdea2aa459d9f6dde1de2cf3267'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}